% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/stewarthuffreilly.R
\name{plotHuff}
\alias{plotHuff}
\title{Plot a Huff Raster}
\usage{
plotHuff(x, add = FALSE, breaks = NULL, typec = "equal", nclass = 5,
  legend.rnd = 0, col = colorRampPalette(c("#E8F6A4", "#445200")))
}
\arguments{
\item{x}{RASTER OBJECT, output of the \code{\link{rasterHuff}} function.}

\item{add}{LOGICAL, add parameter for the \code{plot} function.}

\item{breaks}{NUMERIC, vector of break values to map. If used,
this parameter override \code{typec} and \code{nclass} parameters}

\item{typec}{CHARACTER, either "equal" or "quantile", how to discretize the values.}

\item{nclass}{INTEGER, number of classes to map.}

\item{legend.rnd}{INTEGER, number of digits used to round the figures displayed in the legend.}

\item{col}{FUNCTION, color ramp function such as \code{\link{colorRampPalette}}.}
}
\description{
This function plots the raster produced by the \code{\link{rasterHuff}} function.
}
\details{
Display the raster nicely and return invisible list of break values.
}
\examples{
data(spatData)
# Compute Huff catchment areas from known points (spatPts) on a
# grid defined by its resolution
myhuff <- huff(knownpts = spatPts, varname = "POPULATION",
                     typefct = "exponential", span = 1250, beta = 3,
                     resolution = 200, longlat = FALSE, mask = spatMask)
# Create a raster of huff values
myhuffraster <- rasterHuff(x = myhuff, mask = spatMask)
# Plot Huff values nicely
plotHuff(x = myhuffraster)
}

